// This file is an automatically generated Go binding. Do not modify as any
// change will likely be lost upon the next re-generation!

package contracts

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// UserDirectoryABI is the input ABI used to generate the binding from.
const UserDirectoryABI = "[{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"brg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"removeWallet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"profile\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes3\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addWallet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"root_\",\"type\":\"address\"},{\"name\":\"currency_\",\"type\":\"bytes3\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"UnauthorizedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"LogWalletAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"removedWallet\",\"type\":\"address\"}],\"name\":\"LogWalletRemoved\",\"type\":\"event\"}]"

// UserDirectoryBin is the compiled bytecode used for deploying new contracts.
const UserDirectoryBin = `"0x6060604052341561000f57600080fd5b604051604080613d6083398101604052808051919060200180519150505b5b60018054600160a060020a03191633600160a060020a03169081179091557fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b600160a060020a038216151561008e57600080fd5b7f55534400000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000008216146100dc57600080fd5b60028054600160a060020a031916600160a060020a0384811691909117918290556004805462ffffff19167d01000000000000000000000000000000000000000000000000000000000085041790556001549181169163f1ed4eda9116306040517c010000000000000000000000000000000000000000000000000000000063ffffffff8516028152600160a060020a03928316600482015291166024820152604401600060405180830381600087803b151561019857600080fd5b6102c65a03f115156101a957600080fd5b5050505b50505b613ba1806101bf6000396000f300606060405236156100bf5763ffffffff60e060020a60003504166307da68f581146100c457806313af4035146100d957806329b57c69146100fa5780634f9c8fe81461011f57806375f12b211461014e5780637a9e5e4b146101755780637ad71f72146101965780638da5cb5b146101c8578063a75fe8e1146101f7578063ab60636c14610218578063be9a6555146102a3578063bf7e214f146102b8578063e5a6b10f146102e7578063ebf0c7171461032f578063fbd51eee1461035e575b600080fd5b34156100cf57600080fd5b6100d7610373565b005b34156100e457600080fd5b6100d7600160a060020a0360043516610423565b005b341561010557600080fd5b61010d6104a1565b60405190815260200160405180910390f35b341561012a57600080fd5b6101326104a8565b604051600160a060020a03909116815260200160405180910390f35b341561015957600080fd5b610161610512565b604051901515815260200160405180910390f35b341561018057600080fd5b6100d7600160a060020a0360043516610533565b005b34156101a157600080fd5b6101326004356105b1565b604051600160a060020a03909116815260200160405180910390f35b34156101d357600080fd5b6101326105e3565b604051600160a060020a03909116815260200160405180910390f35b341561020257600080fd5b6100d7600160a060020a03600435166105f2565b005b341561022357600080fd5b61022b61075d565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156102685780820151818401525b60200161024f565b50505050905090810190601f1680156102955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102ae57600080fd5b6100d76107fb565b005b34156102c357600080fd5b610132610894565b604051600160a060020a03909116815260200160405180910390f35b34156102f257600080fd5b6102fa6108a3565b6040517fffffff0000000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b341561033a57600080fd5b6101326108c9565b604051600160a060020a03909116815260200160405180910390f35b341561036957600080fd5b6100d76108d8565b005b61038933600035600160e060020a03191661098d565b151561039157fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b50505b565b61043933600035600160e060020a03191661098d565b151561044157fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b5b50565b6005545b90565b600254600090600160a060020a0316634f9c8fe882604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156104f257600080fd5b6102c65a03f1151561050357600080fd5b50505060405180519150505b90565b60015474010000000000000000000000000000000000000000900460ff1681565b61054933600035600160e060020a03191661098d565b151561055157fe5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a25b5b50565b60058054829081106105bf57fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b600154600160a060020a031681565b6000196000805b60055482101561065b5783600160a060020a031660058381548110151561061c57fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a0316141561064f578192505b5b6001909101906105f9565b60008312610756575060058054600019810191908290811061067957fe5b906000526020600020900160005b9054906101000a9004600160a060020a03166005848154811015156106a857fe5b906000526020600020900160005b6101000a815481600160a060020a030219169083600160a060020a031602179055506005818154811015156106e757fe5b906000526020600020900160005b6101000a815490600160a060020a030219169055806005816107179190610aeb565b507fb79624962e0e32fb056c1f0aef3a7ec011949ae012e85f598f00c445d8b23c2284604051600160a060020a03909116815260200160405180910390a15b5b50505050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f35780601f106107c8576101008083540402835291602001916107f3565b820191906000526020600020905b8154815290600101906020018083116107d657829003601f168201915b505050505081565b61081133600035600160e060020a03191661098d565b151561081957fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff0000000000000000000000000000000000000000191690555b5b50505b565b600054600160a060020a031681565b6004547d0100000000000000000000000000000000000000000000000000000000000281565b600254600160a060020a031681565b6000306108e3610b15565b600160a060020a039091168152602001604051809103906000f080151561090957600080fd5b90506005805480600101828161091f9190610aeb565b916000526020600020900160005b8154600160a060020a038086166101009390930a92830292021916179055507f4bb72edbb6b4f4050e363e5db675f0f33dd63cabacdec731c7bd6fd0b87b7f8781604051600160a060020a03909116815260200160405180910390a15b50565b600030600160a060020a031683600160a060020a031614156109b157506001610ae2565b600154600160a060020a0384811691161480156109d75750600054600160a060020a0316155b156109e457506001610ae2565b600054600160a060020a03161515610a4c577feb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be78383604051600160a060020a039092168252600160e060020a03191660208201526040908101905180910390a1506000610ae2565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b1515610ac557600080fd5b6102c65a03f11515610ad657600080fd5b50505060405180519150505b5b5b5b92915050565b815481835581811511610b0f57600083815260209020610b0f918101908301610b4f565b5b505050565b60405161300580610b7183390190565b815481835581811511610b0f57600083815260209020610b0f918101908301610b4f565b5b505050565b6104a591905b80821115610b695760008155600101610b55565b5090565b9056006060604052341561000f57600080fd5b604051602080613005833981016040528080519150505b5b60018054600160a060020a03191633600160a060020a03169081179091557fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b60038054600160a060020a031916600160a060020a03838116919091179182905516638da5cb5b6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156100e957600080fd5b6102c65a03f115156100fa57600080fd5b505050604051805160018054600160a060020a031916600160a060020a0392909216919091179055505b505b612ed0806101356000396000f300606060405236156101015763ffffffff60e060020a60003504166307da68f5811461010657806313af40351461011b5780631f9ad3811461013c57806350cc258e1461015a57806356e596a8146101c15780635d12928b146101fd57806370a082311461022c578063712e62791461025d57806375f12b21146102995780637a9e5e4b146102c05780637bb98a68146102e15780637e84d36b1461038f5780638c64ea4a146103a45780638da5cb5b146103d6578063a37685e514610405578063be9a65551461042a578063bf7e214f1461043f578063c41c2f241461046e578063cf35bdd01461049d578063d1da3e7b146104cf578063f710e3e214610508575b600080fd5b341561011157600080fd5b610119610534565b005b341561012657600080fd5b610119600160a060020a03600435166105e4565b005b341561014757600080fd5b61011963ffffffff60043516610662565b005b341561016557600080fd5b61016d610852565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156101ad5780820151818401525b602001610194565b505050509050019250505060405180910390f35b34156101cc57600080fd5b610119600160a060020a03600435811690602435166fffffffffffffffffffffffffffffffff6044351661090d565b005b341561020857600080fd5b6102106109bc565b604051600160a060020a03909116815260200160405180910390f35b341561023757600080fd5b61024b600160a060020a0360043516610a76565b60405190815260200160405180910390f35b341561026857600080fd5b610119600160a060020a03600435811690602435166fffffffffffffffffffffffffffffffff60443516610af1565b005b34156102a457600080fd5b6102ac610c11565b604051901515815260200160405180910390f35b34156102cb57600080fd5b610119600160a060020a0360043516610c32565b005b34156102ec57600080fd5b6102f4610cb0565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156103395780820151818401525b602001610320565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156103795780820151818401525b602001610360565b5050505090500194505050505060405180910390f35b341561039a57600080fd5b610119610cd3565b005b34156103af57600080fd5b610210600435610d59565b604051600160a060020a03909116815260200160405180910390f35b34156103e157600080fd5b610210610d8b565b604051600160a060020a03909116815260200160405180910390f35b341561041057600080fd5b61024b610d9a565b60405190815260200160405180910390f35b341561043557600080fd5b610119610e1a565b005b341561044a57600080fd5b610210610eb3565b604051600160a060020a03909116815260200160405180910390f35b341561047957600080fd5b610210610ec2565b604051600160a060020a03909116815260200160405180910390f35b34156104a857600080fd5b610210600435610ed1565b604051600160a060020a03909116815260200160405180910390f35b34156104da57600080fd5b6102ac600160a060020a0360043581169060243516610f03565b604051901515815260200160405180910390f35b341561051357600080fd5b61051b611004565b60405163ffffffff909116815260200160405180910390f35b61054a33600035600160e060020a03191661100b565b151561055257fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b50505b565b6105fa33600035600160e060020a03191661100b565b151561060257fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b5b50565b6004546000190163ffffffff82168190111561067d57600080fd5b6004805463ffffffff841690811061069157fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a031663681fe70c6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156106f657600080fd5b6102c65a03f1151561070757600080fd5b50505060405180519050151561071c57600080fd5b7fe5b46e8ce81c693c1c4aaac9f27e523da69aab82fb2459d7819867c01869d99160048363ffffffff1681548110151561075257fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316604051600160a060020a03909116815260200160405180910390a163ffffffff8216811461080e5760048054829081106107a857fe5b906000526020600020900160005b9054906101000a9004600160a060020a031660048363ffffffff168154811015156107dd57fe5b906000526020600020900160005b6101000a815481600160a060020a030219169083600160a060020a031602179055505b600480548290811061081c57fe5b906000526020600020900160005b6101000a815490600160a060020a0302191690558060048161084c9190611322565b505b5050565b61085a61134c565b61086261134c565b6004546000906040518059106108755750595b908082528060200260200182016040525b509150600090505b60045463ffffffff82161015610904576004805463ffffffff83169081106108b257fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316828263ffffffff16815181106108e457fe5b600160a060020a039092166020928302909101909101525b60010161088e565b8192505b505090565b61092333600035600160e060020a03191661100b565b151561092b57fe5b82600160a060020a031663a9059cbb838360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526fffffffffffffffffffffffffffffffff166024820152604401602060405180830381600087803b151561099a57600080fd5b6102c65a03f115156109ab57600080fd5b505050604051805150505b5b505050565b600080306109c861135e565b600160a060020a039091168152602001604051809103906000f08015156109ee57600080fd5b905060048054806001018281610a049190611322565b916000526020600020900160005b8154600160a060020a038086166101009390930a92830292021916179055507fefaffcc73be9b765a62202dfb131e611b0309bd65ee334807b295db1ecb1b54f81604051600160a060020a03909116815260200160405180910390a18091505b5090565b600081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610acf57600080fd5b6102c65a03f11515610ae057600080fd5b50505060405180519150505b919050565b610b0733600035600160e060020a03191661100b565b1515610b0f57fe5b73__AssetsLib_____________________________6352d28bc8600285858560405160e060020a63ffffffff87160281526004810194909452600160a060020a039283166024850152911660448301526fffffffffffffffffffffffffffffffff16606482015260840160006040518083038186803b1515610b9057600080fd5b6102c65a03f41515610ba157600080fd5b5050507fd0d5f5786af393a6465a13be9c33dbd3ee9c29b1c32872f8aa0cd405ee62f8fe838383604051600160a060020a0393841681529190921660208201526fffffffffffffffffffffffffffffffff9091166040808301919091526060909101905180910390a15b5b505050565b60015474010000000000000000000000000000000000000000900460ff1681565b610c4833600035600160e060020a03191661100b565b1515610c5057fe5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a25b5b50565b610cb861134c565b610cc061134c565b610cca600261116e565b915091505b9091565b610ce933600035600160e060020a03191661100b565b1515610cf157fe5b73__AssetsLib_____________________________6376c86cd7600260405160e060020a63ffffffff8416028152600481019190915260240160006040518083038186803b1515610d4157600080fd5b6102c65a03f4151561084c57600080fd5b5050505b5b565b6004805482908110610d6757fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b600154600160a060020a031681565b600073__AssetsLib_____________________________63922ddcf26002836040516020015260405160e060020a63ffffffff8416028152600481019190915260240160206040518083038186803b1515610df457600080fd5b6102c65a03f41515610e0557600080fd5b505050604051805163ffffffff169150505b90565b610e3033600035600160e060020a03191661100b565b1515610e3857fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff0000000000000000000000000000000000000000191690555b5b50505b565b600054600160a060020a031681565b600354600160a060020a031681565b6002805482908110610d6757fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b6000610f1b33600035600160e060020a03191661100b565b1515610f2357fe5b73__AssetsLib_____________________________638a7fcb2d6002858560006040516020015260405160e060020a63ffffffff86160281526004810193909352600160a060020a03918216602484015216604482015260640160206040518083038186803b1515610f9457600080fd5b6102c65a03f41515610fa557600080fd5b5050506040518051905015610ff9577f37803e2125c48ee96c38ddf04e826daf335b0e1603579040fd275aba6d06b6fc83604051600160a060020a03909116815260200160405180910390a1506001610ffd565b5060005b5b92915050565b6004545b90565b600030600160a060020a031683600160a060020a0316141561102f57506001610ffd565b600154600160a060020a0384811691161480156110555750600054600160a060020a0316155b1561106257506001610ffd565b600054600160a060020a031615156110ca577feb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be78383604051600160a060020a039092168252600160e060020a03191660208201526040908101905180910390a1506000610ffd565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b151561114357600080fd5b6102c65a03f1151561115457600080fd5b505050604051805190509050610ffd565b5b5b5b92915050565b61117661134c565b61117e61134c565b61118661134c565b61118e61134c565b84546000906040518059106111a05750595b908082528060200260200182016040525b5086549093506040518059106111c45750595b908082528060200260200182016040525b509150600090505b855463ffffffff8216101561131357858163ffffffff1681548110151561120057fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316838263ffffffff168151811061123257fe5b600160a060020a039092166020928302909101909101528554869063ffffffff831690811061125d57fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156112d357600080fd5b6102c65a03f115156112e457600080fd5b50505060405180519050828263ffffffff168151811061130057fe5b602090810290910101525b6001016111dd565b8282945094505b505050915091565b81548183558181151161084c5760008381526020902061084c9181019083016113ab565b5b505050565b60206040519081016040526000815290565b604051611ad880620013cd83390190565b81548183558181151161084c5760008381526020902061084c9181019083016113ab565b5b505050565b60206040519081016040526000815290565b610e1791905b80821115610a7257600081556001016113b1565b5090565b9056006060604052341561000f57600080fd5b604051602080611ad8833981016040528080519150505b5b60018054600160a060020a03191633600160a060020a03169081179091557fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b60048054600160a060020a031916600160a060020a03838116919091179182905516638da5cb5b6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156100e957600080fd5b6102c65a03f115156100fa57600080fd5b505050604051805160018054600160a060020a031916600160a060020a0392909216919091179055505b505b6119a3806101356000396000f3006060604052361561012d5763ffffffff60e060020a60003504166307da68f5811461013257806313af4035146101475780631a93ebf01461016857806322d8fe40146101a657806324101d40146101be5780632f195680146101e3578063521eb2731461020857806356e596a8146102375780635e7624241461026a578063681fe70c1461028f57806370a08231146102b6578063712e6279146102e757806375f12b211461031a5780637a9e5e4b146103415780637bb98a68146103625780637e84d36b146104105780638da5cb5b146104255780639913314114610454578063a37685e5146104b8578063a52d7ffb146104dd578063be9a6555146104fe578063bf7e214f14610513578063cf35bdd014610542578063d1da3e7b14610574578063dc2628fa146105ad575b600080fd5b341561013d57600080fd5b6101456105c5565b005b341561015257600080fd5b610145600160a060020a0360043516610675565b005b341561017357600080fd5b61018a6001608060020a03600435166024356106f3565b6040516001608060020a03909116815260200160405180910390f35b34156101b157600080fd5b61014560043561089c565b005b34156101c957600080fd5b6101d16109a1565b60405190815260200160405180910390f35b34156101ee57600080fd5b6101d1610adc565b60405190815260200160405180910390f35b341561021357600080fd5b61021b610ae2565b604051600160a060020a03909116815260200160405180910390f35b341561024257600080fd5b610145600160a060020a03600435811690602435166001608060020a0360443516610af1565b005b341561027557600080fd5b6101d1610b97565b60405190815260200160405180910390f35b341561029a57600080fd5b6102a2610b9e565b604051901515815260200160405180910390f35b34156102c157600080fd5b6101d1600160a060020a0360043516610baa565b60405190815260200160405180910390f35b34156102f257600080fd5b610145600160a060020a03600435811690602435166001608060020a0360443516610c25565b005b341561032557600080fd5b6102a2610d33565b604051901515815260200160405180910390f35b341561034c57600080fd5b610145600160a060020a0360043516610d54565b005b341561036d57600080fd5b610375610dd2565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156103ba5780820151818401525b6020016103a1565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156103fa5780820151818401525b6020016103e1565b5050505090500194505050505060405180910390f35b341561041b57600080fd5b610145610df5565b005b341561043057600080fd5b61021b610e7b565b604051600160a060020a03909116815260200160405180910390f35b341561045f57600080fd5b61046a600435610e8a565b6040516001608060020a03808716825285811660208301528416604082015260608101839052608081018260028111156104a057fe5b60ff1681526020019550505050505060405180910390f35b34156104c357600080fd5b6101d1610edf565b60405190815260200160405180910390f35b34156104e857600080fd5b6101456001608060020a0360043516610f5f565b005b341561050957600080fd5b6101456110a7565b005b341561051e57600080fd5b61021b611140565b604051600160a060020a03909116815260200160405180910390f35b341561054d57600080fd5b61021b60043561114f565b604051600160a060020a03909116815260200160405180910390f35b341561057f57600080fd5b6102a2600160a060020a0360043581169060243516611181565b604051901515815260200160405180910390f35b34156105b857600080fd5b610145600435611282565b005b6105db33600035600160e060020a03191661152e565b15156105e357fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b50505b565b61068b33600035600160e060020a03191661152e565b151561069357fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b5b50565b60045460009081908190600160a060020a031663c41c2f2482604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561074157600080fd5b6102c65a03f1151561075257600080fd5b50505060405180519050600160a060020a0316634f9c8fe86000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156107a157600080fd5b6102c65a03f115156107b257600080fd5b50505060405180519050600160a060020a031633600160a060020a03161415156107db57600080fd5b60038054859081106107e957fe5b906000526020600020906004020160005b50915060025b600383015460ff16600281111561081357fe5b1461081d57600080fd5b815461083c906001608060020a0380821691608060020a900416611691565b9050806001608060020a0316856001608060020a0316111561085c578094505b815461087890608060020a90046001608060020a0316866116b4565b82546001608060020a03918216608060020a0291161782558492505b505092915050565b60005b60038054839081106108ad57fe5b906000526020600020906004020160005b506003015460ff1660028111156108d157fe5b146108db57600080fd5b60016003828154811015156108ec57fe5b906000526020600020906004020160005b50600301805460ff1916600183600281111561091557fe5b02179055507f3ed382a18ac4f16fc64863bd31865023dddcfb68ad39027d444747a2d9a3d40b3060038381548110151561094b57fe5b906000526020600020906004020160005b50546001608060020a031683604051600160a060020a0390931683526001608060020a0390911660208301526040808301919091526060909101905180910390a15b50565b600454600090600160a060020a031663c41c2f2482604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156109eb57600080fd5b6102c65a03f115156109fc57600080fd5b50505060405180519050600160a060020a0316634f9c8fe86000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610a4b57600080fd5b6102c65a03f11515610a5c57600080fd5b50505060405180519050600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610abc57600080fd5b6102c65a03f11515610acd57600080fd5b50505060405180519150505b90565b60055481565b600454600160a060020a031681565b610b0733600035600160e060020a03191661152e565b1515610b0f57fe5b82600160a060020a031663a9059cbb838360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526001608060020a03166024820152604401602060405180830381600087803b1515610b7557600080fd5b6102c65a03f11515610b8657600080fd5b505050604051805150505b5b505050565b6003545b90565b60035460009011155b90565b600081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610c0357600080fd5b6102c65a03f11515610c1457600080fd5b50505060405180519150505b919050565b610c3b33600035600160e060020a03191661152e565b1515610c4357fe5b73__AssetsLib_____________________________6352d28bc8600285858560405160e060020a63ffffffff87160281526004810194909452600160a060020a039283166024850152911660448301526001608060020a0316606482015260840160006040518083038186803b1515610cbb57600080fd5b6102c65a03f41515610ccc57600080fd5b5050507fd0d5f5786af393a6465a13be9c33dbd3ee9c29b1c32872f8aa0cd405ee62f8fe838383604051600160a060020a0393841681529190921660208201526001608060020a039091166040808301919091526060909101905180910390a15b5b505050565b60015474010000000000000000000000000000000000000000900460ff1681565b610d6a33600035600160e060020a03191661152e565b1515610d7257fe5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a25b5b50565b610dda6118a2565b610de26118a2565b610dec60026116d7565b915091505b9091565b610e0b33600035600160e060020a03191661152e565b1515610e1357fe5b73__AssetsLib_____________________________6376c86cd7600260405160e060020a63ffffffff8416028152600481019190915260240160006040518083038186803b1515610e6357600080fd5b6102c65a03f41515610b9157600080fd5b5050505b5b565b600154600160a060020a031681565b6003805482908110610e9857fe5b906000526020600020906004020160005b508054600182015460028301546003909301546001608060020a038084169550608060020a909304831693919092169160ff1685565b600073__AssetsLib_____________________________63922ddcf26002836040516020015260405160e060020a63ffffffff8416028152600481019190915260240160206040518083038186803b1515610f3957600080fd5b6102c65a03f41515610f4a57600080fd5b505050604051805163ffffffff169150505b90565b610f676118c6565b6001608060020a03821681524260608201526003805460018101610f8b83826118f7565b916000526020600020906004020160005b508290815181546fffffffffffffffffffffffffffffffff19166001608060020a0391909116178155602082015181546001608060020a03918216608060020a02911617815560408201516001820180546fffffffffffffffffffffffffffffffff19166001608060020a039290921691909117905560608201518160020155608082015160038201805460ff1916600183600281111561103957fe5b02179055505050507f67b3996492d0393b3c7c2e35a1d67de008977701daa8880bf9c0f91aadf5529a3083600160038054905003604051600160a060020a0390931683526001608060020a0390911660208301526040808301919091526060909101905180910390a15b5050565b6110bd33600035600160e060020a03191661152e565b15156110c557fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff0000000000000000000000000000000000000000191690555b5b50505b565b600054600160a060020a031681565b600280548290811061115d57fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b600061119933600035600160e060020a03191661152e565b15156111a157fe5b73__AssetsLib_____________________________638a7fcb2d6002858560006040516020015260405160e060020a63ffffffff86160281526004810193909352600160a060020a03918216602484015216604482015260640160206040518083038186803b151561121257600080fd5b6102c65a03f4151561122357600080fd5b5050506040518051905015611277577f37803e2125c48ee96c38ddf04e826daf335b0e1603579040fd275aba6d06b6fc83604051600160a060020a03909116815260200160405180910390a150600161127b565b5060005b5b92915050565b60005b600380548390811061129357fe5b906000526020600020906004020160005b506003015460ff1660028111156112b757fe5b146112c157600080fd5b60026003828154811015156112d257fe5b906000526020600020906004020160005b50600301805460ff191660018360028111156112fb57fe5b021790555061133960038281548110151561131257fe5b906000526020600020906004020160005b50546005546001608060020a039091169061188b565b600555600454600160a060020a031663c41c2f246000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561138457600080fd5b6102c65a03f1151561139557600080fd5b50505060405180519050600160a060020a0316634f9c8fe86000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156113e457600080fd5b6102c65a03f115156113f557600080fd5b50505060405180519050600160a060020a031663591a91c560038381548110151561141c57fe5b906000526020600020906004020160005b50546004546001608060020a0390911690600160a060020a031660405160e060020a63ffffffff85160281526001608060020a039092166004830152600160a060020a03166024820152604401600060405180830381600087803b151561149357600080fd5b6102c65a03f115156114a457600080fd5b5050507f65025c7799d1ede98b1ef493282c86b38a8552da89e43f27da441fb2019096f33060038381548110151561094b57fe5b906000526020600020906004020160005b50546001608060020a031683604051600160a060020a0390931683526001608060020a0390911660208301526040808301919091526060909101905180910390a15b50565b600030600160a060020a031683600160a060020a031614156115525750600161127b565b600154600160a060020a0384811691161480156115785750600054600160a060020a0316155b156115855750600161127b565b600054600160a060020a031615156115ed577feb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be78383604051600160a060020a039092168252600160e060020a03191660208201526040908101905180910390a150600061127b565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b151561166657600080fd5b6102c65a03f1151561167757600080fd5b50505060405180519050905061127b565b5b5b5b92915050565b8082036001608060020a03808416908216111561127b57600080fd5b5b92915050565b8082016001608060020a03808416908216101561127b57600080fd5b5b92915050565b6116df6118a2565b6116e76118a2565b6116ef6118a2565b6116f76118a2565b84546000906040518059106117095750595b908082528060200260200182016040525b50865490935060405180591061172d5750595b908082528060200260200182016040525b509150600090505b855463ffffffff8216101561187c57858163ffffffff1681548110151561176957fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316838263ffffffff168151811061179b57fe5b600160a060020a039092166020928302909101909101528554869063ffffffff83169081106117c657fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561183c57600080fd5b6102c65a03f1151561184d57600080fd5b50505060405180519050828263ffffffff168151811061186957fe5b602090810290910101525b600101611746565b8282945094505b505050915091565b8082018281101561127b57600080fd5b5b92915050565b60206040519081016040526000815290565b60206040519081016040526000815290565b60a060405190810160409081526000808352602083018190529082018190526060820181905260808201905b905290565b815481835581811511610b9157600402816004028360005260206000209182019101610b919190611929565b5b505050565b610ad991905b808211156119705760008082556001820180546fffffffffffffffffffffffffffffffff19169055600282015560038101805460ff1916905560040161192f565b5090565b905600a165627a7a72305820da80049d8605ce56b0171bbc20e48d0304427d74f7162d4c03541a9ad2b424440029a165627a7a723058208334b3cc29e378beef35cad86c67a59e07c7d760d65a00aa9a64973fb3ed23b40029a165627a7a723058200e09db64a423a62a3d3a734840ddcebed2c5e410a8bc4c8603a08246258424700029"`

// DeployUserDirectory deploys a new Ethereum contract, binding an instance of UserDirectory to it.
func DeployUserDirectory(auth *bind.TransactOpts, backend bind.ContractBackend, root_ common.Address, currency_ [3]byte) (common.Address, *types.Transaction, *UserDirectory, error) {
	parsed, err := abi.JSON(strings.NewReader(UserDirectoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(UserDirectoryBin), backend, root_, currency_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &UserDirectory{UserDirectoryCaller: UserDirectoryCaller{contract: contract}, UserDirectoryTransactor: UserDirectoryTransactor{contract: contract}}, nil
}

// UserDirectory is an auto generated Go binding around an Ethereum contract.
type UserDirectory struct {
	UserDirectoryCaller     // Read-only binding to the contract
	UserDirectoryTransactor // Write-only binding to the contract
}

// UserDirectoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type UserDirectoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserDirectoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type UserDirectoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserDirectorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type UserDirectorySession struct {
	Contract     *UserDirectory    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UserDirectoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type UserDirectoryCallerSession struct {
	Contract *UserDirectoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// UserDirectoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type UserDirectoryTransactorSession struct {
	Contract     *UserDirectoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// UserDirectoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type UserDirectoryRaw struct {
	Contract *UserDirectory // Generic contract binding to access the raw methods on
}

// UserDirectoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type UserDirectoryCallerRaw struct {
	Contract *UserDirectoryCaller // Generic read-only contract binding to access the raw methods on
}

// UserDirectoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type UserDirectoryTransactorRaw struct {
	Contract *UserDirectoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewUserDirectory creates a new instance of UserDirectory, bound to a specific deployed contract.
func NewUserDirectory(address common.Address, backend bind.ContractBackend) (*UserDirectory, error) {
	contract, err := bindUserDirectory(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &UserDirectory{UserDirectoryCaller: UserDirectoryCaller{contract: contract}, UserDirectoryTransactor: UserDirectoryTransactor{contract: contract}}, nil
}

// NewUserDirectoryCaller creates a new read-only instance of UserDirectory, bound to a specific deployed contract.
func NewUserDirectoryCaller(address common.Address, caller bind.ContractCaller) (*UserDirectoryCaller, error) {
	contract, err := bindUserDirectory(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &UserDirectoryCaller{contract: contract}, nil
}

// NewUserDirectoryTransactor creates a new write-only instance of UserDirectory, bound to a specific deployed contract.
func NewUserDirectoryTransactor(address common.Address, transactor bind.ContractTransactor) (*UserDirectoryTransactor, error) {
	contract, err := bindUserDirectory(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &UserDirectoryTransactor{contract: contract}, nil
}

// bindUserDirectory binds a generic wrapper to an already deployed contract.
func bindUserDirectory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(UserDirectoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserDirectory *UserDirectoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserDirectory.Contract.UserDirectoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserDirectory *UserDirectoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.Contract.UserDirectoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserDirectory *UserDirectoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _UserDirectory.Contract.UserDirectoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserDirectory *UserDirectoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserDirectory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserDirectory *UserDirectoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserDirectory *UserDirectoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _UserDirectory.Contract.contract.Transact(opts, method, params...)
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Authority(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "authority")
	return *ret0, err
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_UserDirectory *UserDirectorySession) Authority() (common.Address, error) {
	return _UserDirectory.Contract.Authority(&_UserDirectory.CallOpts)
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Authority() (common.Address, error) {
	return _UserDirectory.Contract.Authority(&_UserDirectory.CallOpts)
}

// Brg is a free data retrieval call binding the contract method 0x4f9c8fe8.
//
// Solidity: function brg() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Brg(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "brg")
	return *ret0, err
}

// Brg is a free data retrieval call binding the contract method 0x4f9c8fe8.
//
// Solidity: function brg() constant returns(address)
func (_UserDirectory *UserDirectorySession) Brg() (common.Address, error) {
	return _UserDirectory.Contract.Brg(&_UserDirectory.CallOpts)
}

// Brg is a free data retrieval call binding the contract method 0x4f9c8fe8.
//
// Solidity: function brg() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Brg() (common.Address, error) {
	return _UserDirectory.Contract.Brg(&_UserDirectory.CallOpts)
}

// Currency is a free data retrieval call binding the contract method 0xe5a6b10f.
//
// Solidity: function currency() constant returns(bytes3)
func (_UserDirectory *UserDirectoryCaller) Currency(opts *bind.CallOpts) ([3]byte, error) {
	var (
		ret0 = new([3]byte)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "currency")
	return *ret0, err
}

// Currency is a free data retrieval call binding the contract method 0xe5a6b10f.
//
// Solidity: function currency() constant returns(bytes3)
func (_UserDirectory *UserDirectorySession) Currency() ([3]byte, error) {
	return _UserDirectory.Contract.Currency(&_UserDirectory.CallOpts)
}

// Currency is a free data retrieval call binding the contract method 0xe5a6b10f.
//
// Solidity: function currency() constant returns(bytes3)
func (_UserDirectory *UserDirectoryCallerSession) Currency() ([3]byte, error) {
	return _UserDirectory.Contract.Currency(&_UserDirectory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_UserDirectory *UserDirectorySession) Owner() (common.Address, error) {
	return _UserDirectory.Contract.Owner(&_UserDirectory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Owner() (common.Address, error) {
	return _UserDirectory.Contract.Owner(&_UserDirectory.CallOpts)
}

// Profile is a free data retrieval call binding the contract method 0xab60636c.
//
// Solidity: function profile() constant returns(string)
func (_UserDirectory *UserDirectoryCaller) Profile(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "profile")
	return *ret0, err
}

// Profile is a free data retrieval call binding the contract method 0xab60636c.
//
// Solidity: function profile() constant returns(string)
func (_UserDirectory *UserDirectorySession) Profile() (string, error) {
	return _UserDirectory.Contract.Profile(&_UserDirectory.CallOpts)
}

// Profile is a free data retrieval call binding the contract method 0xab60636c.
//
// Solidity: function profile() constant returns(string)
func (_UserDirectory *UserDirectoryCallerSession) Profile() (string, error) {
	return _UserDirectory.Contract.Profile(&_UserDirectory.CallOpts)
}

// Root is a free data retrieval call binding the contract method 0xebf0c717.
//
// Solidity: function root() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Root(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "root")
	return *ret0, err
}

// Root is a free data retrieval call binding the contract method 0xebf0c717.
//
// Solidity: function root() constant returns(address)
func (_UserDirectory *UserDirectorySession) Root() (common.Address, error) {
	return _UserDirectory.Contract.Root(&_UserDirectory.CallOpts)
}

// Root is a free data retrieval call binding the contract method 0xebf0c717.
//
// Solidity: function root() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Root() (common.Address, error) {
	return _UserDirectory.Contract.Root(&_UserDirectory.CallOpts)
}

// Stopped is a free data retrieval call binding the contract method 0x75f12b21.
//
// Solidity: function stopped() constant returns(bool)
func (_UserDirectory *UserDirectoryCaller) Stopped(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "stopped")
	return *ret0, err
}

// Stopped is a free data retrieval call binding the contract method 0x75f12b21.
//
// Solidity: function stopped() constant returns(bool)
func (_UserDirectory *UserDirectorySession) Stopped() (bool, error) {
	return _UserDirectory.Contract.Stopped(&_UserDirectory.CallOpts)
}

// Stopped is a free data retrieval call binding the contract method 0x75f12b21.
//
// Solidity: function stopped() constant returns(bool)
func (_UserDirectory *UserDirectoryCallerSession) Stopped() (bool, error) {
	return _UserDirectory.Contract.Stopped(&_UserDirectory.CallOpts)
}

// WalletCount is a free data retrieval call binding the contract method 0x29b57c69.
//
// Solidity: function walletCount() constant returns(uint256)
func (_UserDirectory *UserDirectoryCaller) WalletCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "walletCount")
	return *ret0, err
}

// WalletCount is a free data retrieval call binding the contract method 0x29b57c69.
//
// Solidity: function walletCount() constant returns(uint256)
func (_UserDirectory *UserDirectorySession) WalletCount() (*big.Int, error) {
	return _UserDirectory.Contract.WalletCount(&_UserDirectory.CallOpts)
}

// WalletCount is a free data retrieval call binding the contract method 0x29b57c69.
//
// Solidity: function walletCount() constant returns(uint256)
func (_UserDirectory *UserDirectoryCallerSession) WalletCount() (*big.Int, error) {
	return _UserDirectory.Contract.WalletCount(&_UserDirectory.CallOpts)
}

// Wallets is a free data retrieval call binding the contract method 0x7ad71f72.
//
// Solidity: function wallets( uint256) constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Wallets(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "wallets", arg0)
	return *ret0, err
}

// Wallets is a free data retrieval call binding the contract method 0x7ad71f72.
//
// Solidity: function wallets( uint256) constant returns(address)
func (_UserDirectory *UserDirectorySession) Wallets(arg0 *big.Int) (common.Address, error) {
	return _UserDirectory.Contract.Wallets(&_UserDirectory.CallOpts, arg0)
}

// Wallets is a free data retrieval call binding the contract method 0x7ad71f72.
//
// Solidity: function wallets( uint256) constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Wallets(arg0 *big.Int) (common.Address, error) {
	return _UserDirectory.Contract.Wallets(&_UserDirectory.CallOpts, arg0)
}

// AddWallet is a paid mutator transaction binding the contract method 0xfbd51eee.
//
// Solidity: function addWallet() returns()
func (_UserDirectory *UserDirectoryTransactor) AddWallet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "addWallet")
}

// AddWallet is a paid mutator transaction binding the contract method 0xfbd51eee.
//
// Solidity: function addWallet() returns()
func (_UserDirectory *UserDirectorySession) AddWallet() (*types.Transaction, error) {
	return _UserDirectory.Contract.AddWallet(&_UserDirectory.TransactOpts)
}

// AddWallet is a paid mutator transaction binding the contract method 0xfbd51eee.
//
// Solidity: function addWallet() returns()
func (_UserDirectory *UserDirectoryTransactorSession) AddWallet() (*types.Transaction, error) {
	return _UserDirectory.Contract.AddWallet(&_UserDirectory.TransactOpts)
}

// RemoveWallet is a paid mutator transaction binding the contract method 0xa75fe8e1.
//
// Solidity: function removeWallet(wallet address) returns()
func (_UserDirectory *UserDirectoryTransactor) RemoveWallet(opts *bind.TransactOpts, wallet common.Address) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "removeWallet", wallet)
}

// RemoveWallet is a paid mutator transaction binding the contract method 0xa75fe8e1.
//
// Solidity: function removeWallet(wallet address) returns()
func (_UserDirectory *UserDirectorySession) RemoveWallet(wallet common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.RemoveWallet(&_UserDirectory.TransactOpts, wallet)
}

// RemoveWallet is a paid mutator transaction binding the contract method 0xa75fe8e1.
//
// Solidity: function removeWallet(wallet address) returns()
func (_UserDirectory *UserDirectoryTransactorSession) RemoveWallet(wallet common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.RemoveWallet(&_UserDirectory.TransactOpts, wallet)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(authority_ address) returns()
func (_UserDirectory *UserDirectoryTransactor) SetAuthority(opts *bind.TransactOpts, authority_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "setAuthority", authority_)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(authority_ address) returns()
func (_UserDirectory *UserDirectorySession) SetAuthority(authority_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetAuthority(&_UserDirectory.TransactOpts, authority_)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(authority_ address) returns()
func (_UserDirectory *UserDirectoryTransactorSession) SetAuthority(authority_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetAuthority(&_UserDirectory.TransactOpts, authority_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(owner_ address) returns()
func (_UserDirectory *UserDirectoryTransactor) SetOwner(opts *bind.TransactOpts, owner_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "setOwner", owner_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(owner_ address) returns()
func (_UserDirectory *UserDirectorySession) SetOwner(owner_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetOwner(&_UserDirectory.TransactOpts, owner_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(owner_ address) returns()
func (_UserDirectory *UserDirectoryTransactorSession) SetOwner(owner_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetOwner(&_UserDirectory.TransactOpts, owner_)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_UserDirectory *UserDirectoryTransactor) Start(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "start")
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_UserDirectory *UserDirectorySession) Start() (*types.Transaction, error) {
	return _UserDirectory.Contract.Start(&_UserDirectory.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_UserDirectory *UserDirectoryTransactorSession) Start() (*types.Transaction, error) {
	return _UserDirectory.Contract.Start(&_UserDirectory.TransactOpts)
}

// Stop is a paid mutator transaction binding the contract method 0x07da68f5.
//
// Solidity: function stop() returns()
func (_UserDirectory *UserDirectoryTransactor) Stop(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "stop")
}

// Stop is a paid mutator transaction binding the contract method 0x07da68f5.
//
// Solidity: function stop() returns()
func (_UserDirectory *UserDirectorySession) Stop() (*types.Transaction, error) {
	return _UserDirectory.Contract.Stop(&_UserDirectory.TransactOpts)
}

// Stop is a paid mutator transaction binding the contract method 0x07da68f5.
//
// Solidity: function stop() returns()
func (_UserDirectory *UserDirectoryTransactorSession) Stop() (*types.Transaction, error) {
	return _UserDirectory.Contract.Stop(&_UserDirectory.TransactOpts)
}
