// This file is an automatically generated Go binding. Do not modify as any
// change will likely be lost upon the next re-generation!

package contracts

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// UserDirectoryABI is the input ABI used to generate the binding from.
const UserDirectoryABI = "[{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"brg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"removeWallet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"profile\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes3\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addWallet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"root_\",\"type\":\"address\"},{\"name\":\"currency_\",\"type\":\"bytes3\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"UnauthorizedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"LogWalletAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"removedWallet\",\"type\":\"address\"}],\"name\":\"LogWalletRemoved\",\"type\":\"event\"}]"

// UserDirectoryBin is the compiled bytecode used for deploying new contracts.
const UserDirectoryBin = `"0x6060604052341561000f57600080fd5b6040516040806137ec83398101604052808051919060200180519150505b5b60018054600160a060020a03191633600160a060020a03169081179091557fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b600160a060020a038216151561008e57600080fd5b7f55534400000000000000000000000000000000000000000000000000000000007fffffff00000000000000000000000000000000000000000000000000000000008216146100dc57600080fd5b60028054600160a060020a031916600160a060020a0384811691909117918290556004805462ffffff19167d01000000000000000000000000000000000000000000000000000000000085041790556001549181169163f1ed4eda9116306040517c010000000000000000000000000000000000000000000000000000000063ffffffff8516028152600160a060020a03928316600482015291166024820152604401600060405180830381600087803b151561019857600080fd5b6102c65a03f115156101a957600080fd5b5050505b50505b61362d806101bf6000396000f300606060405236156100bf5763ffffffff60e060020a60003504166307da68f581146100c457806313af4035146100d957806329b57c69146100fa5780634f9c8fe81461011f57806375f12b211461014e5780637a9e5e4b146101755780637ad71f72146101965780638da5cb5b146101c8578063a75fe8e1146101f7578063ab60636c14610218578063be9a6555146102a3578063bf7e214f146102b8578063e5a6b10f146102e7578063ebf0c7171461032f578063fbd51eee1461035e575b600080fd5b34156100cf57600080fd5b6100d7610373565b005b34156100e457600080fd5b6100d7600160a060020a0360043516610423565b005b341561010557600080fd5b61010d6104a1565b60405190815260200160405180910390f35b341561012a57600080fd5b6101326104a8565b604051600160a060020a03909116815260200160405180910390f35b341561015957600080fd5b610161610512565b604051901515815260200160405180910390f35b341561018057600080fd5b6100d7600160a060020a0360043516610533565b005b34156101a157600080fd5b6101326004356105b1565b604051600160a060020a03909116815260200160405180910390f35b34156101d357600080fd5b6101326105e3565b604051600160a060020a03909116815260200160405180910390f35b341561020257600080fd5b6100d7600160a060020a03600435166105f2565b005b341561022357600080fd5b61022b61075d565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156102685780820151818401525b60200161024f565b50505050905090810190601f1680156102955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102ae57600080fd5b6100d76107fb565b005b34156102c357600080fd5b610132610894565b604051600160a060020a03909116815260200160405180910390f35b34156102f257600080fd5b6102fa6108a3565b6040517fffffff0000000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b341561033a57600080fd5b6101326108c9565b604051600160a060020a03909116815260200160405180910390f35b341561036957600080fd5b6100d76108d8565b005b61038933600035600160e060020a03191661098d565b151561039157fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b50505b565b61043933600035600160e060020a03191661098d565b151561044157fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b5b50565b6005545b90565b600254600090600160a060020a0316634f9c8fe882604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156104f257600080fd5b6102c65a03f1151561050357600080fd5b50505060405180519150505b90565b60015474010000000000000000000000000000000000000000900460ff1681565b61054933600035600160e060020a03191661098d565b151561055157fe5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a25b5b50565b60058054829081106105bf57fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b600154600160a060020a031681565b6000196000805b60055482101561065b5783600160a060020a031660058381548110151561061c57fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a0316141561064f578192505b5b6001909101906105f9565b60008312610756575060058054600019810191908290811061067957fe5b906000526020600020900160005b9054906101000a9004600160a060020a03166005848154811015156106a857fe5b906000526020600020900160005b6101000a815481600160a060020a030219169083600160a060020a031602179055506005818154811015156106e757fe5b906000526020600020900160005b6101000a815490600160a060020a030219169055806005816107179190610aeb565b507fb79624962e0e32fb056c1f0aef3a7ec011949ae012e85f598f00c445d8b23c2284604051600160a060020a03909116815260200160405180910390a15b5b50505050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f35780601f106107c8576101008083540402835291602001916107f3565b820191906000526020600020905b8154815290600101906020018083116107d657829003601f168201915b505050505081565b61081133600035600160e060020a03191661098d565b151561081957fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff0000000000000000000000000000000000000000191690555b5b50505b565b600054600160a060020a031681565b6004547d0100000000000000000000000000000000000000000000000000000000000281565b600254600160a060020a031681565b6000306108e3610b15565b600160a060020a039091168152602001604051809103906000f080151561090957600080fd5b90506005805480600101828161091f9190610aeb565b916000526020600020900160005b8154600160a060020a038086166101009390930a92830292021916179055507f4bb72edbb6b4f4050e363e5db675f0f33dd63cabacdec731c7bd6fd0b87b7f8781604051600160a060020a03909116815260200160405180910390a15b50565b600030600160a060020a031683600160a060020a031614156109b157506001610ae2565b600154600160a060020a0384811691161480156109d75750600054600160a060020a0316155b156109e457506001610ae2565b600054600160a060020a03161515610a4c577feb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be78383604051600160a060020a039092168252600160e060020a03191660208201526040908101905180910390a1506000610ae2565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b1515610ac557600080fd5b6102c65a03f11515610ad657600080fd5b50505060405180519150505b5b5b5b92915050565b815481835581811511610b0f57600083815260209020610b0f918101908301610b4f565b5b505050565b604051612a9180610b7183390190565b815481835581811511610b0f57600083815260209020610b0f918101908301610b4f565b5b505050565b6104a591905b80821115610b695760008155600101610b55565b5090565b9056006060604052341561000f57600080fd5b604051602080612a91833981016040528080519150505b5b60018054600160a060020a03191633600160a060020a03169081179091557fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b60038054600160a060020a031916600160a060020a0383161790555b505b6129f28061009f6000396000f300606060405236156100f65763ffffffff60e060020a60003504166307da68f581146100fb57806313af4035146101105780631f9ad3811461013157806350cc258e1461014f57806356e596a8146101b65780635d12928b146101f257806370a0823114610221578063712e62791461025257806375f12b211461028e5780637a9e5e4b146102b55780637bb98a68146102d65780637e84d36b1461033d5780638c64ea4a146103525780638da5cb5b14610384578063be9a6555146103b3578063bf7e214f146103c8578063c41c2f24146103f7578063cf35bdd014610426578063d1da3e7b14610458578063f710e3e21461047f575b600080fd5b341561010657600080fd5b61010e6104ab565b005b341561011b57600080fd5b61010e600160a060020a036004351661055b565b005b341561013c57600080fd5b61010e63ffffffff600435166105d9565b005b341561015a57600080fd5b6101626107c9565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156101a25780820151818401525b602001610189565b505050509050019250505060405180910390f35b34156101c157600080fd5b61010e600160a060020a03600435811690602435166fffffffffffffffffffffffffffffffff60443516610884565b005b34156101fd57600080fd5b610205610933565b604051600160a060020a03909116815260200160405180910390f35b341561022c57600080fd5b610240600160a060020a03600435166109ed565b60405190815260200160405180910390f35b341561025d57600080fd5b61010e600160a060020a03600435811690602435166fffffffffffffffffffffffffffffffff60443516610a68565b005b341561029957600080fd5b6102a1610b22565b604051901515815260200160405180910390f35b34156102c057600080fd5b61010e600160a060020a0360043516610b43565b005b34156102e157600080fd5b610162610bc1565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156101a25780820151818401525b602001610189565b505050509050019250505060405180910390f35b341561034857600080fd5b61010e610bd9565b005b341561035d57600080fd5b610205600435610c5f565b604051600160a060020a03909116815260200160405180910390f35b341561038f57600080fd5b610205610c91565b604051600160a060020a03909116815260200160405180910390f35b34156103be57600080fd5b61010e610ca0565b005b34156103d357600080fd5b610205610d39565b604051600160a060020a03909116815260200160405180910390f35b341561040257600080fd5b610205610d48565b604051600160a060020a03909116815260200160405180910390f35b341561043157600080fd5b610205600435610d57565b604051600160a060020a03909116815260200160405180910390f35b341561046357600080fd5b61010e600160a060020a0360043581169060243516610d89565b005b341561048a57600080fd5b610492610e29565b60405163ffffffff909116815260200160405180910390f35b6104c133600035600160e060020a031916610e30565b15156104c957fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b50505b565b61057133600035600160e060020a031916610e30565b151561057957fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b5b50565b6004546000190163ffffffff8216819011156105f457600080fd5b6004805463ffffffff841690811061060857fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a031663681fe70c6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561066d57600080fd5b6102c65a03f1151561067e57600080fd5b50505060405180519050151561069357600080fd5b7fe5b46e8ce81c693c1c4aaac9f27e523da69aab82fb2459d7819867c01869d99160048363ffffffff168154811015156106c957fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316604051600160a060020a03909116815260200160405180910390a163ffffffff8216811461078557600480548290811061071f57fe5b906000526020600020900160005b9054906101000a9004600160a060020a031660048363ffffffff1681548110151561075457fe5b906000526020600020900160005b6101000a815481600160a060020a030219169083600160a060020a031602179055505b600480548290811061079357fe5b906000526020600020900160005b6101000a815490600160a060020a030219169055806004816107c391906110ad565b505b5050565b6107d16110d7565b6107d96110d7565b6004546000906040518059106107ec5750595b908082528060200260200182016040525b509150600090505b60045463ffffffff8216101561087b576004805463ffffffff831690811061082957fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316828263ffffffff168151811061085b57fe5b600160a060020a039092166020928302909101909101525b600101610805565b8192505b505090565b61089a33600035600160e060020a031916610e30565b15156108a257fe5b82600160a060020a031663a9059cbb838360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526fffffffffffffffffffffffffffffffff166024820152604401602060405180830381600087803b151561091157600080fd5b6102c65a03f1151561092257600080fd5b505050604051805150505b5b505050565b6000803061093f6110e9565b600160a060020a039091168152602001604051809103906000f080151561096557600080fd5b90506004805480600101828161097b91906110ad565b916000526020600020900160005b8154600160a060020a038086166101009390930a92830292021916179055507fefaffcc73be9b765a62202dfb131e611b0309bd65ee334807b295db1ecb1b54f81604051600160a060020a03909116815260200160405180910390a18091505b5090565b600081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610a4657600080fd5b6102c65a03f11515610a5757600080fd5b50505060405180519150505b919050565b610a7e33600035600160e060020a031916610e30565b1515610a8657fe5b73__AssetsLib_____________________________6352d28bc8600285858560405160e060020a63ffffffff87160281526004810194909452600160a060020a039283166024850152911660448301526fffffffffffffffffffffffffffffffff16606482015260840160006040518083038186803b1515610b0757600080fd5b6102c65a03f41515610b1857600080fd5b5050505b5b505050565b60015474010000000000000000000000000000000000000000900460ff1681565b610b5933600035600160e060020a031916610e30565b1515610b6157fe5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a25b5b50565b610bc96110d7565b610bd36002610f8e565b90505b90565b610bef33600035600160e060020a031916610e30565b1515610bf757fe5b73__AssetsLib_____________________________6376c86cd7600260405160e060020a63ffffffff8416028152600481019190915260240160006040518083038186803b1515610c4757600080fd5b6102c65a03f415156107c357600080fd5b5050505b5b565b6004805482908110610c6d57fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b600154600160a060020a031681565b610cb633600035600160e060020a031916610e30565b1515610cbe57fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff0000000000000000000000000000000000000000191690555b5b50505b565b600054600160a060020a031681565b600354600160a060020a031681565b6002805482908110610c6d57fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b610d9f33600035600160e060020a031916610e30565b1515610da757fe5b73__AssetsLib_____________________________638a7fcb2d6002848460405160e060020a63ffffffff86160281526004810193909352600160a060020a03918216602484015216604482015260640160006040518083038186803b1515610e0f57600080fd5b6102c65a03f41515610e2057600080fd5b5050505b5b5050565b6004545b90565b600030600160a060020a031683600160a060020a03161415610e5457506001610f85565b600154600160a060020a038481169116148015610e7a5750600054600160a060020a0316155b15610e8757506001610f85565b600054600160a060020a03161515610eef577feb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be78383604051600160a060020a039092168252600160e060020a03191660208201526040908101905180910390a1506000610f85565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b1515610f6857600080fd5b6102c65a03f11515610f7957600080fd5b50505060405180519150505b5b5b5b92915050565b610f966110d7565b610f9e6110d7565b8254600090604051805910610fb05750595b908082528060200260200182016040525b509150600090505b835463ffffffff821610156110a257838163ffffffff16815481101515610fec57fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561106257600080fd5b6102c65a03f1151561107357600080fd5b50505060405180519050828263ffffffff168151811061108f57fe5b602090810290910101525b600101610fc9565b8192505b5050919050565b8154818355818115116107c3576000838152602090206107c3918101908301611135565b5b505050565b60206040519081016040526000815290565b6040516118708061115783390190565b8154818355818115116107c3576000838152602090206107c3918101908301611135565b5b505050565b60206040519081016040526000815290565b610bd691905b808211156109e9576000815560010161113b565b5090565b9056006060604052341561000f57600080fd5b604051602080611870833981016040528080519150505b5b60018054600160a060020a03191633600160a060020a03169081179091557fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b60048054600160a060020a031916600160a060020a03838116919091179182905516638da5cb5b6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156100e957600080fd5b6102c65a03f115156100fa57600080fd5b505050604051805160018054600160a060020a031916600160a060020a0392909216919091179055505b505b61173b806101356000396000f300606060405236156101225763ffffffff60e060020a60003504166307da68f5811461012757806313af40351461013c5780631a93ebf01461015d57806322d8fe401461019b57806324101d40146101b35780632f195680146101d8578063521eb273146101fd57806356e596a81461022c5780635e7624241461025f578063681fe70c1461028457806370a08231146102ab578063712e6279146102dc57806375f12b211461030f5780637a9e5e4b146103365780637bb98a68146103575780637e84d36b146103be5780638da5cb5b146103d35780639913314114610402578063a52d7ffb14610466578063be9a655514610487578063bf7e214f1461049c578063cf35bdd0146104cb578063d1da3e7b146104fd578063dc2628fa14610524575b600080fd5b341561013257600080fd5b61013a61053c565b005b341561014757600080fd5b61013a600160a060020a03600435166105ec565b005b341561016857600080fd5b61017f6001608060020a036004351660243561066a565b6040516001608060020a03909116815260200160405180910390f35b34156101a657600080fd5b61013a600435610813565b005b34156101be57600080fd5b6101c6610918565b60405190815260200160405180910390f35b34156101e357600080fd5b6101c6610a53565b60405190815260200160405180910390f35b341561020857600080fd5b610210610a59565b604051600160a060020a03909116815260200160405180910390f35b341561023757600080fd5b61013a600160a060020a03600435811690602435166001608060020a0360443516610a68565b005b341561026a57600080fd5b6101c6610b0e565b60405190815260200160405180910390f35b341561028f57600080fd5b610297610b15565b604051901515815260200160405180910390f35b34156102b657600080fd5b6101c6600160a060020a0360043516610b21565b60405190815260200160405180910390f35b34156102e757600080fd5b61013a600160a060020a03600435811690602435166001608060020a0360443516610b9c565b005b341561031a57600080fd5b610297610c4d565b604051901515815260200160405180910390f35b341561034157600080fd5b61013a600160a060020a0360043516610c6e565b005b341561036257600080fd5b61036a610cec565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156103aa5780820151818401525b602001610391565b505050509050019250505060405180910390f35b34156103c957600080fd5b61013a610d04565b005b34156103de57600080fd5b610210610d8a565b604051600160a060020a03909116815260200160405180910390f35b341561040d57600080fd5b610418600435610d99565b6040516001608060020a038087168252858116602083015284166040820152606081018390526080810182600281111561044e57fe5b60ff1681526020019550505050505060405180910390f35b341561047157600080fd5b61013a6001608060020a0360043516610dee565b005b341561049257600080fd5b61013a610f55565b005b34156104a757600080fd5b610210610fee565b604051600160a060020a03909116815260200160405180910390f35b34156104d657600080fd5b610210600435610ffd565b604051600160a060020a03909116815260200160405180910390f35b341561050857600080fd5b61013a600160a060020a036004358116906024351661102f565b005b341561052f57600080fd5b61013a6004356110cf565b005b61055233600035600160e060020a03191661137b565b151561055a57fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b50505b565b61060233600035600160e060020a03191661137b565b151561060a57fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a25b5b50565b60045460009081908190600160a060020a031663c41c2f2482604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156106b857600080fd5b6102c65a03f115156106c957600080fd5b50505060405180519050600160a060020a0316634f9c8fe86000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561071857600080fd5b6102c65a03f1151561072957600080fd5b50505060405180519050600160a060020a031633600160a060020a031614151561075257600080fd5b600380548590811061076057fe5b906000526020600020906004020160005b50915060025b600383015460ff16600281111561078a57fe5b1461079457600080fd5b81546107b3906001608060020a0380821691608060020a9004166114d9565b9050806001608060020a0316856001608060020a031611156107d3578094505b81546107ef90608060020a90046001608060020a0316866114f9565b82546001608060020a03918216608060020a0291161782558492505b505092915050565b60005b600380548390811061082457fe5b906000526020600020906004020160005b506003015460ff16600281111561084857fe5b1461085257600080fd5b600160038281548110151561086357fe5b906000526020600020906004020160005b50600301805460ff1916600183600281111561088c57fe5b02179055507f3ed382a18ac4f16fc64863bd31865023dddcfb68ad39027d444747a2d9a3d40b306003838154811015156108c257fe5b906000526020600020906004020160005b50546001608060020a031683604051600160a060020a0390931683526001608060020a0390911660208301526040808301919091526060909101905180910390a15b50565b600454600090600160a060020a031663c41c2f2482604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561096257600080fd5b6102c65a03f1151561097357600080fd5b50505060405180519050600160a060020a0316634f9c8fe86000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156109c257600080fd5b6102c65a03f115156109d357600080fd5b50505060405180519050600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610a3357600080fd5b6102c65a03f11515610a4457600080fd5b50505060405180519150505b90565b60055481565b600454600160a060020a031681565b610a7e33600035600160e060020a03191661137b565b1515610a8657fe5b82600160a060020a031663a9059cbb838360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526001608060020a03166024820152604401602060405180830381600087803b1515610aec57600080fd5b6102c65a03f11515610afd57600080fd5b505050604051805150505b5b505050565b6003545b90565b60035460009011155b90565b600081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610b7a57600080fd5b6102c65a03f11515610b8b57600080fd5b50505060405180519150505b919050565b610bb233600035600160e060020a03191661137b565b1515610bba57fe5b73__AssetsLib_____________________________6352d28bc8600285858560405160e060020a63ffffffff87160281526004810194909452600160a060020a039283166024850152911660448301526001608060020a0316606482015260840160006040518083038186803b1515610c3257600080fd5b6102c65a03f41515610c4357600080fd5b5050505b5b505050565b60015474010000000000000000000000000000000000000000900460ff1681565b610c8433600035600160e060020a03191661137b565b1515610c8c57fe5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a25b5b50565b610cf461164c565b610cfe6002611519565b90505b90565b610d1a33600035600160e060020a03191661137b565b1515610d2257fe5b73__AssetsLib_____________________________6376c86cd7600260405160e060020a63ffffffff8416028152600481019190915260240160006040518083038186803b1515610d7257600080fd5b6102c65a03f41515610b0857600080fd5b5050505b5b565b600154600160a060020a031681565b6003805482908110610da757fe5b906000526020600020906004020160005b508054600182015460028301546003909301546001608060020a038084169550608060020a909304831693919092169160ff1685565b610df661165e565b610e0c33600035600160e060020a03191661137b565b1515610e1457fe5b6001608060020a03821681524260608201526003805460018101610e38838261168f565b916000526020600020906004020160005b508290815181546fffffffffffffffffffffffffffffffff19166001608060020a0391909116178155602082015181546001608060020a03918216608060020a02911617815560408201516001820180546fffffffffffffffffffffffffffffffff19166001608060020a039290921691909117905560608201518160020155608082015160038201805460ff19166001836002811115610ee657fe5b02179055505050507f67b3996492d0393b3c7c2e35a1d67de008977701daa8880bf9c0f91aadf5529a3083600160038054905003604051600160a060020a0390931683526001608060020a0390911660208301526040808301919091526060909101905180910390a15b5b5050565b610f6b33600035600160e060020a03191661137b565b1515610f7357fe5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46001805474ff0000000000000000000000000000000000000000191690555b5b50505b565b600054600160a060020a031681565b600280548290811061100b57fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b61104533600035600160e060020a03191661137b565b151561104d57fe5b73__AssetsLib_____________________________638a7fcb2d6002848460405160e060020a63ffffffff86160281526004810193909352600160a060020a03918216602484015216604482015260640160006040518083038186803b15156110b557600080fd5b6102c65a03f415156110c657600080fd5b5050505b5b5050565b60005b60038054839081106110e057fe5b906000526020600020906004020160005b506003015460ff16600281111561110457fe5b1461110e57600080fd5b600260038281548110151561111f57fe5b906000526020600020906004020160005b50600301805460ff1916600183600281111561114857fe5b021790555061118660038281548110151561115f57fe5b906000526020600020906004020160005b50546005546001608060020a0390911690611638565b600555600454600160a060020a031663c41c2f246000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156111d157600080fd5b6102c65a03f115156111e257600080fd5b50505060405180519050600160a060020a0316634f9c8fe86000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561123157600080fd5b6102c65a03f1151561124257600080fd5b50505060405180519050600160a060020a031663591a91c560038381548110151561126957fe5b906000526020600020906004020160005b50546001546001608060020a0390911690600160a060020a031660405160e060020a63ffffffff85160281526001608060020a039092166004830152600160a060020a03166024820152604401600060405180830381600087803b15156112e057600080fd5b6102c65a03f115156112f157600080fd5b5050507f65025c7799d1ede98b1ef493282c86b38a8552da89e43f27da441fb2019096f3306003838154811015156108c257fe5b906000526020600020906004020160005b50546001608060020a031683604051600160a060020a0390931683526001608060020a0390911660208301526040808301919091526060909101905180910390a15b50565b600030600160a060020a031683600160a060020a0316141561139f575060016114d0565b600154600160a060020a0384811691161480156113c55750600054600160a060020a0316155b156113d2575060016114d0565b600054600160a060020a0316151561143a577feb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be78383604051600160a060020a039092168252600160e060020a03191660208201526040908101905180910390a15060006114d0565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b15156114b357600080fd5b6102c65a03f115156114c457600080fd5b50505060405180519150505b5b5b5b92915050565b8082036001608060020a0380841690821611156114d057fe5b5b92915050565b8082016001608060020a0380841690821610156114d057fe5b5b92915050565b61152161164c565b61152961164c565b825460009060405180591061153b5750595b908082528060200260200182016040525b509150600090505b835463ffffffff8216101561162d57838163ffffffff1681548110151561157757fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156115ed57600080fd5b6102c65a03f115156115fe57600080fd5b50505060405180519050828263ffffffff168151811061161a57fe5b602090810290910101525b600101611554565b8192505b5050919050565b808201828110156114d057fe5b5b92915050565b60206040519081016040526000815290565b60a060405190810160409081526000808352602083018190529082018190526060820181905260808201905b905290565b815481835581811511610b0857600402816004028360005260206000209182019101610b0891906116c1565b5b505050565b610a5091905b808211156117085760008082556001820180546fffffffffffffffffffffffffffffffff19169055600282015560038101805460ff191690556004016116c7565b5090565b905600a165627a7a72305820b2e43e3d5721687cf2be25e791aecceda11992c28ba88399ee1d73c63f0d617f0029a165627a7a723058208cb608d1027f226d3907660dee840e5159c448867e8c09e987e7ec35c4c2ddba0029a165627a7a723058204859cbbb7ce51262fafadb9a26a6d23d2cd88bca213525879a2a9d2a1e80c6ab0029"`

// DeployUserDirectory deploys a new Ethereum contract, binding an instance of UserDirectory to it.
func DeployUserDirectory(auth *bind.TransactOpts, backend bind.ContractBackend, root_ common.Address, currency_ [3]byte) (common.Address, *types.Transaction, *UserDirectory, error) {
	parsed, err := abi.JSON(strings.NewReader(UserDirectoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(UserDirectoryBin), backend, root_, currency_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &UserDirectory{UserDirectoryCaller: UserDirectoryCaller{contract: contract}, UserDirectoryTransactor: UserDirectoryTransactor{contract: contract}}, nil
}

// UserDirectory is an auto generated Go binding around an Ethereum contract.
type UserDirectory struct {
	UserDirectoryCaller     // Read-only binding to the contract
	UserDirectoryTransactor // Write-only binding to the contract
}

// UserDirectoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type UserDirectoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserDirectoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type UserDirectoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserDirectorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type UserDirectorySession struct {
	Contract     *UserDirectory    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UserDirectoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type UserDirectoryCallerSession struct {
	Contract *UserDirectoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// UserDirectoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type UserDirectoryTransactorSession struct {
	Contract     *UserDirectoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// UserDirectoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type UserDirectoryRaw struct {
	Contract *UserDirectory // Generic contract binding to access the raw methods on
}

// UserDirectoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type UserDirectoryCallerRaw struct {
	Contract *UserDirectoryCaller // Generic read-only contract binding to access the raw methods on
}

// UserDirectoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type UserDirectoryTransactorRaw struct {
	Contract *UserDirectoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewUserDirectory creates a new instance of UserDirectory, bound to a specific deployed contract.
func NewUserDirectory(address common.Address, backend bind.ContractBackend) (*UserDirectory, error) {
	contract, err := bindUserDirectory(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &UserDirectory{UserDirectoryCaller: UserDirectoryCaller{contract: contract}, UserDirectoryTransactor: UserDirectoryTransactor{contract: contract}}, nil
}

// NewUserDirectoryCaller creates a new read-only instance of UserDirectory, bound to a specific deployed contract.
func NewUserDirectoryCaller(address common.Address, caller bind.ContractCaller) (*UserDirectoryCaller, error) {
	contract, err := bindUserDirectory(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &UserDirectoryCaller{contract: contract}, nil
}

// NewUserDirectoryTransactor creates a new write-only instance of UserDirectory, bound to a specific deployed contract.
func NewUserDirectoryTransactor(address common.Address, transactor bind.ContractTransactor) (*UserDirectoryTransactor, error) {
	contract, err := bindUserDirectory(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &UserDirectoryTransactor{contract: contract}, nil
}

// bindUserDirectory binds a generic wrapper to an already deployed contract.
func bindUserDirectory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(UserDirectoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserDirectory *UserDirectoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserDirectory.Contract.UserDirectoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserDirectory *UserDirectoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.Contract.UserDirectoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserDirectory *UserDirectoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _UserDirectory.Contract.UserDirectoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserDirectory *UserDirectoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserDirectory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserDirectory *UserDirectoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserDirectory *UserDirectoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _UserDirectory.Contract.contract.Transact(opts, method, params...)
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Authority(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "authority")
	return *ret0, err
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_UserDirectory *UserDirectorySession) Authority() (common.Address, error) {
	return _UserDirectory.Contract.Authority(&_UserDirectory.CallOpts)
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Authority() (common.Address, error) {
	return _UserDirectory.Contract.Authority(&_UserDirectory.CallOpts)
}

// Brg is a free data retrieval call binding the contract method 0x4f9c8fe8.
//
// Solidity: function brg() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Brg(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "brg")
	return *ret0, err
}

// Brg is a free data retrieval call binding the contract method 0x4f9c8fe8.
//
// Solidity: function brg() constant returns(address)
func (_UserDirectory *UserDirectorySession) Brg() (common.Address, error) {
	return _UserDirectory.Contract.Brg(&_UserDirectory.CallOpts)
}

// Brg is a free data retrieval call binding the contract method 0x4f9c8fe8.
//
// Solidity: function brg() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Brg() (common.Address, error) {
	return _UserDirectory.Contract.Brg(&_UserDirectory.CallOpts)
}

// Currency is a free data retrieval call binding the contract method 0xe5a6b10f.
//
// Solidity: function currency() constant returns(bytes3)
func (_UserDirectory *UserDirectoryCaller) Currency(opts *bind.CallOpts) ([3]byte, error) {
	var (
		ret0 = new([3]byte)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "currency")
	return *ret0, err
}

// Currency is a free data retrieval call binding the contract method 0xe5a6b10f.
//
// Solidity: function currency() constant returns(bytes3)
func (_UserDirectory *UserDirectorySession) Currency() ([3]byte, error) {
	return _UserDirectory.Contract.Currency(&_UserDirectory.CallOpts)
}

// Currency is a free data retrieval call binding the contract method 0xe5a6b10f.
//
// Solidity: function currency() constant returns(bytes3)
func (_UserDirectory *UserDirectoryCallerSession) Currency() ([3]byte, error) {
	return _UserDirectory.Contract.Currency(&_UserDirectory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_UserDirectory *UserDirectorySession) Owner() (common.Address, error) {
	return _UserDirectory.Contract.Owner(&_UserDirectory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Owner() (common.Address, error) {
	return _UserDirectory.Contract.Owner(&_UserDirectory.CallOpts)
}

// Profile is a free data retrieval call binding the contract method 0xab60636c.
//
// Solidity: function profile() constant returns(string)
func (_UserDirectory *UserDirectoryCaller) Profile(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "profile")
	return *ret0, err
}

// Profile is a free data retrieval call binding the contract method 0xab60636c.
//
// Solidity: function profile() constant returns(string)
func (_UserDirectory *UserDirectorySession) Profile() (string, error) {
	return _UserDirectory.Contract.Profile(&_UserDirectory.CallOpts)
}

// Profile is a free data retrieval call binding the contract method 0xab60636c.
//
// Solidity: function profile() constant returns(string)
func (_UserDirectory *UserDirectoryCallerSession) Profile() (string, error) {
	return _UserDirectory.Contract.Profile(&_UserDirectory.CallOpts)
}

// Root is a free data retrieval call binding the contract method 0xebf0c717.
//
// Solidity: function root() constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Root(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "root")
	return *ret0, err
}

// Root is a free data retrieval call binding the contract method 0xebf0c717.
//
// Solidity: function root() constant returns(address)
func (_UserDirectory *UserDirectorySession) Root() (common.Address, error) {
	return _UserDirectory.Contract.Root(&_UserDirectory.CallOpts)
}

// Root is a free data retrieval call binding the contract method 0xebf0c717.
//
// Solidity: function root() constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Root() (common.Address, error) {
	return _UserDirectory.Contract.Root(&_UserDirectory.CallOpts)
}

// Stopped is a free data retrieval call binding the contract method 0x75f12b21.
//
// Solidity: function stopped() constant returns(bool)
func (_UserDirectory *UserDirectoryCaller) Stopped(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "stopped")
	return *ret0, err
}

// Stopped is a free data retrieval call binding the contract method 0x75f12b21.
//
// Solidity: function stopped() constant returns(bool)
func (_UserDirectory *UserDirectorySession) Stopped() (bool, error) {
	return _UserDirectory.Contract.Stopped(&_UserDirectory.CallOpts)
}

// Stopped is a free data retrieval call binding the contract method 0x75f12b21.
//
// Solidity: function stopped() constant returns(bool)
func (_UserDirectory *UserDirectoryCallerSession) Stopped() (bool, error) {
	return _UserDirectory.Contract.Stopped(&_UserDirectory.CallOpts)
}

// WalletCount is a free data retrieval call binding the contract method 0x29b57c69.
//
// Solidity: function walletCount() constant returns(uint256)
func (_UserDirectory *UserDirectoryCaller) WalletCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "walletCount")
	return *ret0, err
}

// WalletCount is a free data retrieval call binding the contract method 0x29b57c69.
//
// Solidity: function walletCount() constant returns(uint256)
func (_UserDirectory *UserDirectorySession) WalletCount() (*big.Int, error) {
	return _UserDirectory.Contract.WalletCount(&_UserDirectory.CallOpts)
}

// WalletCount is a free data retrieval call binding the contract method 0x29b57c69.
//
// Solidity: function walletCount() constant returns(uint256)
func (_UserDirectory *UserDirectoryCallerSession) WalletCount() (*big.Int, error) {
	return _UserDirectory.Contract.WalletCount(&_UserDirectory.CallOpts)
}

// Wallets is a free data retrieval call binding the contract method 0x7ad71f72.
//
// Solidity: function wallets( uint256) constant returns(address)
func (_UserDirectory *UserDirectoryCaller) Wallets(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserDirectory.contract.Call(opts, out, "wallets", arg0)
	return *ret0, err
}

// Wallets is a free data retrieval call binding the contract method 0x7ad71f72.
//
// Solidity: function wallets( uint256) constant returns(address)
func (_UserDirectory *UserDirectorySession) Wallets(arg0 *big.Int) (common.Address, error) {
	return _UserDirectory.Contract.Wallets(&_UserDirectory.CallOpts, arg0)
}

// Wallets is a free data retrieval call binding the contract method 0x7ad71f72.
//
// Solidity: function wallets( uint256) constant returns(address)
func (_UserDirectory *UserDirectoryCallerSession) Wallets(arg0 *big.Int) (common.Address, error) {
	return _UserDirectory.Contract.Wallets(&_UserDirectory.CallOpts, arg0)
}

// AddWallet is a paid mutator transaction binding the contract method 0xfbd51eee.
//
// Solidity: function addWallet() returns()
func (_UserDirectory *UserDirectoryTransactor) AddWallet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "addWallet")
}

// AddWallet is a paid mutator transaction binding the contract method 0xfbd51eee.
//
// Solidity: function addWallet() returns()
func (_UserDirectory *UserDirectorySession) AddWallet() (*types.Transaction, error) {
	return _UserDirectory.Contract.AddWallet(&_UserDirectory.TransactOpts)
}

// AddWallet is a paid mutator transaction binding the contract method 0xfbd51eee.
//
// Solidity: function addWallet() returns()
func (_UserDirectory *UserDirectoryTransactorSession) AddWallet() (*types.Transaction, error) {
	return _UserDirectory.Contract.AddWallet(&_UserDirectory.TransactOpts)
}

// RemoveWallet is a paid mutator transaction binding the contract method 0xa75fe8e1.
//
// Solidity: function removeWallet(wallet address) returns()
func (_UserDirectory *UserDirectoryTransactor) RemoveWallet(opts *bind.TransactOpts, wallet common.Address) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "removeWallet", wallet)
}

// RemoveWallet is a paid mutator transaction binding the contract method 0xa75fe8e1.
//
// Solidity: function removeWallet(wallet address) returns()
func (_UserDirectory *UserDirectorySession) RemoveWallet(wallet common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.RemoveWallet(&_UserDirectory.TransactOpts, wallet)
}

// RemoveWallet is a paid mutator transaction binding the contract method 0xa75fe8e1.
//
// Solidity: function removeWallet(wallet address) returns()
func (_UserDirectory *UserDirectoryTransactorSession) RemoveWallet(wallet common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.RemoveWallet(&_UserDirectory.TransactOpts, wallet)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(authority_ address) returns()
func (_UserDirectory *UserDirectoryTransactor) SetAuthority(opts *bind.TransactOpts, authority_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "setAuthority", authority_)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(authority_ address) returns()
func (_UserDirectory *UserDirectorySession) SetAuthority(authority_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetAuthority(&_UserDirectory.TransactOpts, authority_)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(authority_ address) returns()
func (_UserDirectory *UserDirectoryTransactorSession) SetAuthority(authority_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetAuthority(&_UserDirectory.TransactOpts, authority_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(owner_ address) returns()
func (_UserDirectory *UserDirectoryTransactor) SetOwner(opts *bind.TransactOpts, owner_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "setOwner", owner_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(owner_ address) returns()
func (_UserDirectory *UserDirectorySession) SetOwner(owner_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetOwner(&_UserDirectory.TransactOpts, owner_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(owner_ address) returns()
func (_UserDirectory *UserDirectoryTransactorSession) SetOwner(owner_ common.Address) (*types.Transaction, error) {
	return _UserDirectory.Contract.SetOwner(&_UserDirectory.TransactOpts, owner_)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_UserDirectory *UserDirectoryTransactor) Start(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "start")
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_UserDirectory *UserDirectorySession) Start() (*types.Transaction, error) {
	return _UserDirectory.Contract.Start(&_UserDirectory.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_UserDirectory *UserDirectoryTransactorSession) Start() (*types.Transaction, error) {
	return _UserDirectory.Contract.Start(&_UserDirectory.TransactOpts)
}

// Stop is a paid mutator transaction binding the contract method 0x07da68f5.
//
// Solidity: function stop() returns()
func (_UserDirectory *UserDirectoryTransactor) Stop(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserDirectory.contract.Transact(opts, "stop")
}

// Stop is a paid mutator transaction binding the contract method 0x07da68f5.
//
// Solidity: function stop() returns()
func (_UserDirectory *UserDirectorySession) Stop() (*types.Transaction, error) {
	return _UserDirectory.Contract.Stop(&_UserDirectory.TransactOpts)
}

// Stop is a paid mutator transaction binding the contract method 0x07da68f5.
//
// Solidity: function stop() returns()
func (_UserDirectory *UserDirectoryTransactorSession) Stop() (*types.Transaction, error) {
	return _UserDirectory.Contract.Stop(&_UserDirectory.TransactOpts)
}
